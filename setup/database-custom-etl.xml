<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright 2010: Thomson Reuters Global Resources. All Rights Reserved.
Proprietary and Confidential information of TRGR.  Disclosure, Use or Reproduction without the written authorization of TRGR is prohibited
-->
<!--  
 	Use this script to define your custom extract, transform, load logic.
    This contains example targets that you may want to use as a
    starting point. It works in tandem with the 
    database-etl-custom-macrodef.xml macro definitions.
 -->

<project name="database etl build" basedir=".">

    <!--
        Global properties, task definitions, and imports
    -->
    <import file="${basedir}/setup/database-custom-etl-macrodef.xml"
            description="Loads the database macro definitions" />

    <target name="extract-data"
            depends="initialize-database-scripts"
            description="Run SQL to extract data from MachV or JRECS and create load files">

        <for list="${partition.list}" param="partition">
            <sequential>
                <extract-data-macro partition="@{partition}" />
            </sequential>
        </for>
        <!--
		<parallel threadCount="4">
			<extract-data-macro partition="admindec_md"/>
			<extract-data-macro partition="case_md"/>
			<extract-data-macro partition="docket_md"/>
			<extract-data-macro partition="litigator_md"/>
		</parallel>
		-->
    </target>

    <target name="create-and-load-database"
            depends="create-database,extract-data,load-data"
            description="Creates database tables and loads data">
    </target>

    <target name="load-lookup-data"
            depends="truncate-tables"
            description="Target for loading lookup data to the database(s)">

        <for list="${partition.list}" param="partition">
            <sequential>
                <load-lookup-data-macro partition="@{partition}" />
            </sequential>
        </for>
        <!--
		<parallel threadCount="4">
			<load-lookup-data-macro partition="admindec_md"/>
			<load-lookup-data-macro partition="case_md"/>
			<load-lookup-data-macro partition="docket_md"/>
			<load-lookup-data-macro partition="litigator_md"/>						
		</parallel>
		-->
    </target>

    <target name="load-data"
            depends="truncate-tables, extract-data"
            description="Target for loading data to the database(s)">

        <for list="${partition.list}" param="partition">
            <sequential>
                <load-data-macro partition="@{partition}" />
                <!--<load-lookup-data-macro partition="@{partition}"/>-->
            </sequential>
        </for>
        <!--
		<parallel threadCount="4">		
			<load-data-macro partition="admindec_md"/>
			<load-data-macro partition="case_md"/>
			<load-data-macro partition="docket_md"/>
			<load-data-macro partition="litigator_md"/>	
		</parallel>
-->
    </target>

    <target name="truncate-tables"
            depends="initialize-database-scripts"
            description="Target for truncating data in the database(s)">

        <for list="${partition.list}" param="partition">
            <sequential>
                <echo level="info">Truncating Tables in:  @{partition}${partition.suffix}</echo>
                <disable-constraints-macro user="@{partition}${partition.suffix}" />
                <truncate-tables-macro user="@{partition}${partition.suffix}" />
            </sequential>
        </for>

        <!--
		<parallel threadCount="4">
			<disable-constraints-and-truncate-tables-macro 
                partition="admindec_md"/>
			<disable-constraints-and-truncate-tables-macro 
                partition="case_md"/>
			<disable-constraints-and-truncate-tables-macro 
                partition="docket_md"/>
			<disable-constraints-and-truncate-tables-macro 
                partition="litigator_md"/>
		</parallel>
		-->
    </target>
</project>
