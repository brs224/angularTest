<?xml version="1.0" encoding="UTF-8" ?>
<!--
Copyright 2010: Thomson Reuters Global Resources. All Rights Reserved.
Proprietary and Confidential information of TRGR.  Disclosure, Use or Reproduction without the written authorization of TRGR is prohibited
-->
<!--  
 	Database standard build script
  
  	This is the top-level build file for the database application. 
  	The default build target (create-database) creates the database from scratch.
 -->

<project name="database build"
         default="create-database"
         basedir="."
         xmlns:contrib="antlib:net.sf.antcontrib">

	<!-- Global properties, task definitions, and imports -->
	<import file="${basedir}/setup/database-integration-macrodef.xml"
            description="Loads the database macro definitions" />
	<import file="${basedir}/setup/database-custom-etl.xml"
            description="Loads the database etl configuration" />

	<!-- Common database script initialization sequence -->
	<target name="initialize-database-scripts"
            depends="initialize"
            unless="database-init-completed">
		<contrib:runtarget target="-initialize-database-scripts" />
	</target>

	<target name="-initialize-database-scripts"
            depends="initialize,-load-database-properties,-initialize-ant-contrib-for,-initialize-database-dirs,-initialize-dbunit">
		<property name="database-init-completed" value="anything" />
	</target>

	<target name="-load-database-properties">
		<!-- environment is set in the build-database.properties file -->
		<property file="${basedir}/build-database.properties" />
		<property file="${basedir}/database/properties/${environment}-database.properties" />
		<!-- machv.environment and jrecs.environment are set in the ${environment}-database.properties file -->
		<property file="${basedir}/database/extract/properties/machv-${machv.environment}.properties" />
		<property file="${basedir}/database/extract/properties/jrecs-${jrecs.environment}.properties" />

		<property name="tmp.dir" location="${build.dir}/database" />
	</target>

	<target name="-initialize-ant-contrib-for">
		<path id="old.ant-contrib.classpath">
			<fileset dir="${ant.lib.dir}" includes="ant-contrib-0.6.jar" />
		</path>
		<taskdef name="for" classname="net.sf.antcontrib.logic.For"
        classpathref="old.ant-contrib.classpath" />
	</target>

	<!-- dbunit task -->
	<target name="-initialize-dbunit">
		<taskdef name="dbunit" classname="org.dbunit.ant.DbUnitTask">
			<classpath>
				<fileset dir="${dbunit.lib.path}" includes="*.jar" />
				<fileset dir="${slf4j.lib.path}" includes="*.jar" />
				<fileset dir="${log4j.lib.path}" includes="*.jar" />
				<fileset dir="${jdbc.path}" includes="*.jar" />
			</classpath>
		</taskdef>
	</target>

	<!-- Note that we do not need to do the ant-contrib taskdef. That is already being done in WPT initialization. It's part of the WPT contract. -->

	<target name="-initialize-database-dirs">
		<mkdir dir="${tmp.dir}" />
		<delete includeemptydirs="true">
			<fileset dir="${tmp.dir}" includes="**/*" />
		</delete>
	</target>

	<target name="create-db-users"
            depends="initialize-database-scripts"
            description="Create accounts for database using 'create users.sql'">
		<sequential>
			<echo level="info">Creating Users</echo>
			<create-db-users-macro />
		</sequential>
	</target>

	<target name="drop-db-users"
            depends="initialize-database-scripts"
            description="Drop accounts for database using 'drop users.sql'">
		<sequential>
			<echo level="info">Dropping Users</echo>
			<drop-db-users-macro />
		</sequential>
	</target>

	<target name="create-database"
            depends="initialize-database-scripts"
            description="Runs 'create tables.sql' script">

		<for list="${partition.list}"
                     param="partition">
			<sequential>
				<create-database-macro partition="@{partition}" />
			</sequential>
		</for>
		<!--
		<parallel threadCount="4">
			<create-database-macro partition="admindec_md"/>
			<create-database-macro partition="case_md"/>			
			<create-database-macro partition="docket_md"/>
			<create-database-macro partition="litigator_md"/>
		</parallel>
		-->
	</target>

	<target name="drop-tables" depends="initialize-database-scripts" description="Drops db tables">

		<for list="${partition.list}" param="partition">
			<sequential>
				<drop-tables-and-synonyms-macro partition="@{partition}" />
			</sequential>
		</for>
		<!--
		<parallel threadCount="4">
			<drop-tables-macro partition="admindec_md"/>
			<drop-tables-macro partition="case_md"/>
			<drop-tables-macro partition="docket_md"/>
			<drop-tables-macro partition="litigator_md"/>
		</parallel>
		-->
	</target>

</project>
