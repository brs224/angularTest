<?xml version="1.0" encoding="UTF-8"?>
<!--  
    Copyright 2010: Thomson Reuters Global Resources. All Rights Reserved. Proprietary and
    Confidential information of TRGR. Disclosure, Use or Reproduction without the written
    authorization of TRGR is prohibited.

 	Judicial Development Group: Standard Build Template. This is the top-level build file
 	for the project. 	 
 -->
<project name="grcworkflow" default="dist" basedir=".">

	<target name="jetstream-std-build" depends="clean, dist, deploy-war-local" description="A common build sequence used for Jetstream development" />

	<property name="wpt.version" value="${label}" description="The version of the WPT this build is based on" />

	<!-- Common, mandatory imports: -->
	<import file="${basedir}/setup/common.xml" description="Targets always needed to initialize the build." />
	<import file="${basedir}/setup/ivy-integration.xml" description="Load the Ivy targets." />
	<import file="${basedir}/setup/version-integration.xml" description="Versioning for new projects" />
	<import file="${basedir}/setup/tfs-integration.xml" description="Load the TFS targets." />
	<!-- Insert facet imports -->
	<import file="${basedir}/setup/jsunit-integration.xml" description="Loads the configuration to run javascript tests" />
	<import file="${basedir}/setup/database-integration.xml" description="Loads the database integration configuration" />
	<import file="${basedir}/setup/web-integration.xml" description="Loads the web application integration configuration" />
	<import file="${basedir}/setup/java-service-integration.xml" description="Loads the Java service integration configuration" />
	<import file="${basedir}/setup/java-integration.xml" description="Loads the Java integration configuration" />
	<import file="${basedir}/setup/clover-integration.xml" description="Loads the Clover integration configuration" />
	<import file="${basedir}/setup/checkstyle-integration.xml" description="Loads the Checkstyle integration configuration" />
	<import file="${basedir}/setup/findbugs-integration.xml" description="Loads the Findbugs integration configuration" />
	<import file="${basedir}/setup/java-library-integration.xml" description="Loads the Java library integration configuration" />
	<import file="${basedir}/setup/java-integration.xml" description="Loads the Java integration configuration" />
	<import file="${basedir}/setup/clover-integration.xml" description="Loads the Clover integration configuration" />
	<import file="${basedir}/setup/checkstyle-integration.xml" description="Loads the Checkstyle integration configuration" />
	<import file="${basedir}/setup/findbugs-integration.xml" description="Loads the Findbugs integration configuration" />
	<!-- End of facet imports -->



	<!-- Insert path definitions -->
	<!-- Inline path definitions are deprecated and have been replaced by targets in setup/java-integration.xml. -->
	<!-- End of path definitions -->


	<!-- Insert facet targets -->
	<target name="run-jsunit-tests" depends="initialize,-load-jsunit-properties,-initialize-jsunit">
		<mkdir dir="${test.result.dir}" />
		<jsunit haltonerror="false" haltonfailure="false" dir="${javascript.src.dir}" errorproperty="jsunit.failed">
			<source file="helloWorld.js" />
			<testsuite name="JSUnit test suite" todir="${test.result.dir}">
				<fileset dir="${javascript.test.dir}">
					<include name="**/*Test.js" />
				</fileset>
			</testsuite>
		</jsunit>
		<fail if="jsunit.failed" message="JSUnit test(s) are failing" />
	</target>
	<!-- End of facet targets -->

	<target name="clean" depends="initialize, clean-clover, clean-clover" description="Removes any files generated by the build">
		<delete dir="${build.dir}" />
		<delete dir="${dist.dir}" />
	</target>

	<target name="run-ci-loop" depends="initialize,tfsget,clean,initialize-ci-build,create-ci-artifacts,generate-reports,ivy-publish" description="Runs the continuous integration loop" />

	<target name="dist" depends="initialize,ivy-deliver, create-war, copy-context, update-war-for-java-service, create-jar" description="Builds all distributable artifacts for the project" />

	<target name="create-ci-artifacts" depends="initialize,ivy-deliver, create-war, copy-context, update-war-for-java-service, update-war-for-clover, create-jar" description="Creates artifacts necessary for continuous integration" />

	<target name="generate-reports" depends="initialize, generate-test-reports, generate-style-reports, generate-quality-reports,ivy-report" description="Generates reports about the source code and tests" />

	<target name="generate-test-reports" depends="initialize, generate-web-test-reports, generate-java-test-reports, generate-java-test-reports, generate-jsunit-reports" description="Generates a report of all automated test results, including test coverage" />

	<target name="generate-style-reports" depends="initialize, generate-java-style-reports, generate-java-style-reports" description="Generates reports about the style of the code" />

	<target name="generate-quality-reports" depends="initialize, generate-java-quality-reports, generate-java-quality-reports" description="Generates reports about the quality of the code" />

	<target name="run-tests" depends="initialize, run-out-of-container-tests, run-in-container-tests" description="Executes all tests for project" />

	<target name="run-out-of-container-tests" depends="initialize, run-java-tests, run-java-tests, run-jsunit-tests" description="Executes automated tests that do not require a web container" />

	<target name="compile-source" depends="initialize, compile-java-source, compile-java-source" description="Compiles all source code" />

	<target name="initialize-ci-build" depends="initialize, -with-clover, -with-clover" description="Performs initialization steps necessary when running continuous integration builds">
		<property name="fail-on-test-failure" value="true" />
		<property name="ci.build" value="true" />
	</target>

</project>
